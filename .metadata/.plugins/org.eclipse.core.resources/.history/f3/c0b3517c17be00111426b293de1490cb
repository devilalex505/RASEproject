// Do not remove the include below
#include "test.h"
#include "Servo.h"
#include "Arduino.h"
#include "HardwareSerial.h"
extern HardwareSerial Serial;

/*

  Controlling servo motor from Processing.

  Arduino Version.



  Based on Tom Igoe's example:

  http://itp.nyu.edu/physcomp/Labs/Servo



  by Berio Molina

  Created 10 May 2008

*/



int servoPin = 9;     // Control pin for servo motor

int minPulse = 500;   // Minimum servo position

int maxPulse = 2500;  // Maximum servo position

int pulse = 1000;        // Amount to pulse the servo



long lastPulse = 0;    // the time in milliseconds of the last pulse

int refreshTime = 40; // the time needed in between pulses



int incomingByte = 0;



void setup() {

  pinMode(servoPin, OUTPUT);  // Set servo pin as an output pin

  Serial.begin(9600);



  // Set the motor position value to the middle

  pulse = (maxPulse-minPulse)/2;

  digitalWrite(servoPin, HIGH);   // Turn the motor on

  delayMicroseconds(pulse);       // Length of the pulse sets the motor position

  digitalWrite(servoPin, LOW);    // Turn the motor off

}



void loop() {

  if (Serial.available() > 0) {

    // read the incoming byte:

    incomingByte = Serial.read();



    if(incomingByte == 1){  // 1 = value that is comming from processing

      if(pulse<maxPulse){

        pulse -= 4;

      }

    }

    if(incomingByte == 2){  // 2 = value that is comming from processing

      if(pulse>minPulse){

        pulse += 4;

      }

    }



    // pulse the servo again if rhe refresh time (20 ms) have passed:

    if (millis() - lastPulse >= refreshTime) {

      digitalWrite(servoPin, HIGH);   // Turn the motor on

      delayMicroseconds(pulse);       // Length of the pulse sets the motor position

      digitalWrite(servoPin, LOW);    // Turn the motor off

      lastPulse = millis();           // save the time of the last pulse

    }

  }

}
